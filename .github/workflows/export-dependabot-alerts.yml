name: Export Dependabot Alerts

on:
  push
  # workflow_dispatch:

permissions: 
  security-events: read

jobs:
  export-results:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Export code scanning results to CSV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          python - <<EOF
          import requests
          import csv
          import os
          
          owner = os.getenv('OWNER')
          repo = os.getenv('REPO')
          token = os.getenv('GITHUB_TOKEN')

          def fetch_dependabot_alerts(repo, token):
              url = f'https://api.github.com/repos/{owner}/{repo}/dependabot/alerts'
              url2 = f'https://api.github.com/repos/{owner}/{repo}/code-scanning/alerts'
              print(url)
              headers = {
                'Authorization': f'token {token}',
                'Accept': 'application/vnd.github.v3+json'}
              response = requests.get(url, headers=headers)
              response2 = requests.get(url2, headers=headers)
              print(response.json())
              print(response2)
              return response.json()

          def write_to_csv(all_alerts, filename="dependabot_alerts.csv"):
              columns = ['alert_number', 'alert_state', 'alert_sec_package', 'alert_sec_package_severety', 'alert_sec_package_severety_ver']
              print(all_alerts)
              with open(filename, mode='w', newline='', encoding='utf-8') as file:
                  writer = csv.DictWriter(file, fieldnames=columns)
                  writer.writeheader()
                  for alert in all_alerts:
                      print(alert.get('number'))
                      # writer.writerow({
                      # 'alert_number': alert.get('number'),
                      # 'alert_state': alert.get('state'),
                      # 'alert_sec_package': alert.get('security_advisory', {}).get('package').get('name'),
                      # 'alert_sec_package_severety': alert.get('security_advisory', {}).get('severety'),
                      # 'alert_sec_package_severety_ver': alert.get('security_advisory', {}).get('severety').get('vulnerable_version_range')
                      #  })
          alerts = fetch_dependabot_alerts(repo, token)
          # write_to_csv(alerts)
          print(alerts)
          EOF
      - name: Upload results to workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dependabot_alerts
          path: dependabot_alerts.csv
